var searchIndex={};
searchIndex["rust_regex_explanation_pwa"] = {"doc":"rust_regex_explanation_pwa","i":[[5,"wasm_bindgen_start","rust_regex_explanation_pwa","To start the Wasm application, wasm_bindgen runs this…",null,[[],[["result",["jsvalue"]],["jsvalue"]]]],[5,"__wasm_bindgen_generated_wasm_bindgen_start","","To start the Wasm application, wasm_bindgen runs this…",null,[[]]],[5,"set_all_event_listeners","","",null,[[]]],[5,"run_regex","","on keyup code",null,[[]]],[5,"display_block_2_and_scroll","","make visible 2 elements and jump to the third element",null,[[["str"]]]],[5,"display_none_2","","make 2 invisible",null,[[["str"]]]],[5,"code_gen_copy","","",null,[[]]],[5,"code_gen_run_in_playground","","",null,[[]]],[0,"code_gen_mod","","",null,null],[5,"code_gen_html","rust_regex_explanation_pwa::code_gen_mod","the variables must be html_encoded",null,[[["str"]],["htmlencoded"]]],[5,"code_gen_string","","variables must be not html_encoded",null,[[["str"]],["string"]]],[5,"init_code_template","","the code template",null,[[["htmlencoded"]]]],[0,"examples_mod","rust_regex_explanation_pwa","",null,null],[5,"init_texts","rust_regex_explanation_pwa::examples_mod","",null,[[]]],[5,"example_email","","",null,[[]]],[5,"example_model_base","","",null,[[]]],[5,"example_model_1","","",null,[[]]],[5,"example_model_2","","",null,[[]]],[5,"example_model_3","","",null,[[]]],[5,"example_xml_1","","",null,[[]]],[5,"example_xml_2","","",null,[[]]],[5,"example_xml_3","","",null,[[]]],[5,"example_xml_1_base","","",null,[[]]],[0,"regex_explanation_mod","rust_regex_explanation_pwa","",null,null],[3,"Explanation","rust_regex_explanation_pwa::regex_explanation_mod","",null,null],[12,"reg_str","","",0,null],[12,"html","","",0,null],[12,"single_line","","",0,null],[12,"indent","","",0,null],[12,"color_index","","",0,null],[12,"span_colors","","('s|e', pos, color_index)",0,null],[3,"SingleLine","","builder elements for a single line",null,null],[12,"fragment","","",1,null],[12,"symbol","","",1,null],[12,"explanation","","",1,null],[12,"range_start","","",1,null],[12,"range_end","","",1,null],[5,"create_explanation_html","","creates html encoded with the macro html_encoded_push!()",null,[[["string"]],["htmlencoded"]]],[5,"print","","print any token except literals",null,[[["str"],["explanation"],["usize"],["range",["usize"]]]]],[5,"greed","","",null,[[["bool"]],["str"]]],[5,"process_ast","","",null,[[["box"],["explanation"]]]],[5,"flags","","",null,[[["explanation"],["flags"]]]],[5,"class_set_item","","",null,[[["classsetitem"],["explanation"],["bool"]]]],[5,"literal","","",null,[[["bool"],["explanation"],["literal"]]]],[5,"class_unicode","","",null,[[["explanation"],["classunicode"]]]],[5,"bracketed","","",null,[[["explanation"],["classbracketed"]]]],[11,"print_literals","","",0,[[["self"]]]],[11,"clear_single_line","","",0,[[["self"]]]],[11,"set_explanation","","",0,[[["str"],["self"]]]],[11,"print_fragment","","",0,[[["str"],["self"]]]],[11,"colorize_regex_text","","return the regex with colors",0,[[["self"]],["htmlencoded"]]],[0,"regex_method_mod","rust_regex_explanation_pwa","",null,null],[5,"run_regex_methods_html","rust_regex_explanation_pwa::regex_method_mod","runs 6 regex methods and show result as html",null,[[["str"]],["htmlencoded"]]],[5,"is_match","","example how to use the is_match() method",null,[[["str"],["regex"],["htmlencoded"]]]],[5,"find","","example how to find the first occurrence",null,[[["str"],["regex"],["htmlencoded"]]]],[5,"find_iter","","example how to use find_iter() method - iterator",null,[[["str"],["regex"],["htmlencoded"]]]],[5,"captures","","example how to capture only the first occurrence of regex…",null,[[["str"],["regex"],["htmlencoded"]]]],[5,"captures_iter","","example how to use captures_iter() method - iterator",null,[[["str"],["regex"],["htmlencoded"]]]],[5,"replace_all","","example of how to use replace_all() method the $1, $2,..…",null,[[["str"],["regex"],["htmlencoded"]]]],[0,"test_string_mod","rust_regex_explanation_pwa","",null,null],[5,"test_string_html","rust_regex_explanation_pwa::test_string_mod","color the test string",null,[[["str"]],["htmlencoded"]]],[0,"web_sys_mod","rust_regex_explanation_pwa","helper functions for web_sys, window, document, dom,…",null,null],[3,"HtmlEncoded","rust_regex_explanation_pwa::web_sys_mod","Build a html, that is correctly encoded. Use the…",null,null],[12,"html","","",2,null],[5,"window","","return window object",null,[[],["window"]]],[5,"debug_write","","debug write into session_storage",null,[[["str"]]]],[5,"get_element_by_id","","get element by id",null,[[["str"]],["element"]]],[5,"get_html_element_by_id","","get html element by id",null,[[["str"]],["htmlelement"]]],[5,"save_to_local_storage","","save to local storage",null,[[["str"]]]],[5,"load_string_from_local_storage","","load string from local_storage",null,[[["str"]],["string"]]],[5,"fetch_response","","fetch in Rust with async await for executor spawn_local()…",null,[[["string"]]]],[5,"get_text_area_element_value_string_by_id","","get text_area element value string by id",null,[[["str"]],["string"]]],[5,"set_text_area_element_value_string_by_id","","set text_area element value string by id",null,[[["str"]]]],[5,"set_element_inner_html_by_id","","set element inner text string by id",null,[[["str"],["htmlencoded"]]]],[5,"get_element_inner_text_by_id","","get inner_text as string by id very usable for…",null,[[["str"]],["string"]]],[5,"html_encode","","HTML encode - naive",null,[[["str"]],["string"]]],[5,"get_pseudo_random_int","","pseudo random generator of javascript",null,[[["i32"]],["i32"]]],[5,"scroll","","jump to element",null,[[["str"]]]],[5,"display_block","","make visible the element",null,[[["str"]]]],[5,"display_none","","make invisible the element",null,[[["str"]]]],[5,"change_height","","change height change_height(\"el_id\",\"auto\");…",null,[[["str"]]]],[5,"copy_to_clipboard","","copy to clipboard",null,[[["str"]]]],[5,"open_url_in_new_tab","","",null,[[["str"]]]],[5,"color_index_increment","","in css there are 85 colors increment index with rotation…",null,[[["usize"]]]],[11,"new","","constructor of empty object",2,[[],["htmlencoded"]]],[11,"from_str","","html encode this str and create the object",2,[[["str"]],["htmlencoded"]]],[11,"push_to_use_only_by_the_macro_html_encoded_push","","Don't use this method in your code. Use the…",2,[[["str"],["self"]]]],[11,"push_new_line","","push new line is very common",2,[[["self"]]]],[11,"replace_with_html_encode","","Replace inside the section with encode.",2,[[["str"],["self"]]]],[11,"get_html","","Return the string containing correctly encoded html.",2,[[["self"]],["string"]]],[11,"insert_html","","insert html as a position",2,[[["self"],["usize"],["htmlencoded"]]]],[14,"on_click","rust_regex_explanation_pwa","Simple macro to set listener of onclick events to an…",null,null],[14,"on_keyup","","Simple macro to set listener of onkeyup events to an…",null,null],[14,"html_encoded_push","","Push html encoded variables inside unencoded literal to…",null,null],[11,"from","rust_regex_explanation_pwa::regex_explanation_mod","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"from","rust_regex_explanation_pwa::web_sys_mod","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"default","rust_regex_explanation_pwa::regex_explanation_mod","",0,[[],["explanation"]]],[11,"default","","",1,[[],["singleline"]]],[11,"default","rust_regex_explanation_pwa::web_sys_mod","",2,[[],["htmlencoded"]]],[11,"fmt","rust_regex_explanation_pwa::regex_explanation_mod","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","rust_regex_explanation_pwa::web_sys_mod","",2,[[["formatter"],["self"]],["result"]]]],"p":[[3,"Explanation"],[3,"SingleLine"],[3,"HtmlEncoded"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);
initSidebarItems({"fn":[["change_height","change height change_height(\"el_id\",\"auto\"); change_height(\"el_id\",\"150px\");"],["color_index_increment","in css there are 85 colors increment index with rotation at 85"],["copy_to_clipboard","copy to clipboard"],["debug_write","debug write into session_storage"],["display_block","make visible the element"],["display_none","make invisible the element"],["fetch_response","fetch in Rust with async await for executor spawn_local() return the response as String. Any error will panic."],["get_element_by_id","get element by id"],["get_element_inner_text_by_id","get inner_text as string by id very usable for \"contenteditable\" div or pre>code"],["get_html_element_by_id","get html element by id"],["get_pseudo_random_int","pseudo random generator of javascript"],["get_text_area_element_value_string_by_id","get text_area element value string by id"],["html_encode","HTML encode - naive"],["load_string_from_local_storage","load string from local_storage"],["open_url_in_new_tab",""],["save_to_local_storage","save to local storage"],["scroll","jump to element"],["set_element_inner_html_by_id","set element inner text string by id"],["set_text_area_element_value_string_by_id","set text_area element value string by id"],["window","return window object"]],"struct":[["HtmlEncoded","Build a html, that is correctly encoded. Use the `html_encoded_push!` macro. Literals are pushed unencoded. Variables are always encoded."]]});